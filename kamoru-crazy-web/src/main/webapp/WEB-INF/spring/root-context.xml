<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

        <!-- Root Context: defines shared resources visible to all other web components -->

		<util:properties id="prop" location="/WEB-INF/spring/conf/kamoru.#{T(java.net.InetAddress).getLocalHost().getHostName()}.properties" />
	
		<!-- @Scheduled, @Async -->
		<task:annotation-driven scheduler="scheduler" executor="executor"/>
		<task:scheduler id="scheduler" pool-size="5"/>
		<task:executor  id="executor"  pool-size="4" queue-capacity="4" rejection-policy="ABORT"/>	
	
		<bean id="messageSource" class="jk.kamoru.spring.ReloadableResourceBundleMessageSource">
			<property name="basenames">
				<list>
					<value>/WEB-INF/spring/messages/videoMessage</value>
					<value>/WEB-INF/spring/messages/defaultMessage</value>
				</list>
			</property>
			<property name="cacheSeconds" value="60" /> 
			<property name="fallbackToSystemLocale" value="false" />
		</bean>
	
		<context:component-scan base-package="jk.kamoru.crazy" >
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
	

        <!-- <jee:jndi-lookup id="dataSource2" jndi-name="/jdbc/kamoruDB" resource-ref="true" /> -->

        <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
                <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
                <property name="url" value="jdbc:oracle:thin:@123.212.190.111:1521:csrnd" />
                <property name="username" value="kamoru" />
                <property name="password" value="kamoru" />
                <property name="initialSize" value="2" />
                <property name="maxActive" value="5" />
        </bean> -->

        <!-- JDBC -->
        <!-- <bean id="spitterDao" class="com.springinaction.spitter.persistence.JdbcSpitterDao">
                <property name="dataSource" ref="dataSource" />
        </bean> -->
        <!-- Hibernate -->
        <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
                <property name="dataSource" ref="dataSource" />
                <property name="packagesToScan" value="com.springinaction.spitter.domain"></property>
                <property name="hibernateProperties">
                        <props>
                                <prop key="dialect">org.hibernate.dialect.OracleDialect</prop>
                        </props>
                </property>
        </bean> -->
        <!-- find @Repository -->
        <!-- <context:component-scan base-package="com.springinaction.spitter.persistence" /> -->
        <!-- translate PersistenceException for @Repository -->
        <!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

        <!-- JPA -->
        <!-- <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
                p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaVendorAdapter" />
        <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                p:database="ORACLE" p:showSql="true" p:generateDdl="false" p:databasePlatform="org.hibernate.dialect.OracleDialect" />
        enable EntityManager DI
        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
         -->

        <!-- Transaction -->
        <!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
                p:entityManagerFactory-ref="emf" /> -->
        <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
                p:dataSource-ref="dataSource" />
        <tx:annotation-driven/> -->

</beans>