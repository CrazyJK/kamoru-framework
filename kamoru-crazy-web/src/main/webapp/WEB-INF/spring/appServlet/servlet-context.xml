<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:component-scan base-package="jk.kamoru.crazy" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/res/**" location="/resources/" />

	<default-servlet-handler/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- View Resolver : ContentNegotiatingViewResolver. atom, html, json -->	
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="contentNegotiationManager">
			<beans:bean class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry key="html" value="text/xml"/>
								<beans:entry key="pdf"  value="application/pdf"/>
								<beans:entry key="xsl"  value="application/vnd.ms-excel"/>
								<beans:entry key="xml"  value="application/xml"/>
								<beans:entry key="json" value="application/json"/>
								<beans:entry key="atom" value="application/xml"/>
							</beans:map>
						</beans:constructor-arg>				
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<beans:property name="prefix" value="/WEB-INF/views/" />
					<beans:property name="suffix" value=".jsp" />
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<beans:bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<beans:constructor-arg>
						<beans:bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<beans:property name="classesToBeBound">
								<beans:list>
									<beans:value>jk.kamoru.crazy.domain.Video</beans:value>
									<beans:value>jk.kamoru.crazy.domain.Studio</beans:value>
									<beans:value>jk.kamoru.crazy.domain.Actress</beans:value>
								</beans:list>
							</beans:property>
						</beans:bean>    					 
					</beans:constructor-arg>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
    
    <!-- Exception Resolver -->
    <beans:bean id="exceptionResolver" class="jk.kamoru.spring.SimpleMappingLoggerExceptionResolver">
    	<beans:property name="exceptionMappings">
    		<beans:props>
    			<beans:prop key="jk.kamoru.crazy.video.VideoException">error/videoError</beans:prop>
    			<beans:prop key="jk.kamoru.crazy.image.ImageException">error/imageError</beans:prop>
    			<beans:prop key="jk.kamoru.KamoruException">error/kamoruError</beans:prop>
    		</beans:props>
    	</beans:property>
    	<beans:property name="exceptionAttribute" value="exception"/>
    	<beans:property name="defaultErrorView" value="error/defaultError"/>
    </beans:bean>

    <!-- Locale Resolver -->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

    <interceptors>
		<!-- LocaleChangeInterceptor -->    
    	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
    		<beans:property name="paramName" value="lang"/>
    	</beans:bean>
		<!-- Controller Interceptor -->
		<beans:bean class="jk.kamoru.spring.AccesslogInterceptor">
			<beans:property name="when" value="#{T(jk.kamoru.spring.AccesslogInterceptor$WHEN).AFTER}"/>
		</beans:bean>
    </interceptors>
    
</beans:beans>
